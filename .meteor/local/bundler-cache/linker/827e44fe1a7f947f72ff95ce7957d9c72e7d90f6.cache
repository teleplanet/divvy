[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Template = Package.templating.Template;\nvar ReactiveDict = Package['reactive-dict'].ReactiveDict;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar HTML = Package.htmljs.HTML;\nvar Spacebars = Package.spacebars.Spacebars;\n\n/* Package-scope variables */\nvar BlazeLayout;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////\n//                                                                                //\n// packages/kadira_blaze-layout/lib/client/namespace.js                           //\n//                                                                                //\n////////////////////////////////////////////////////////////////////////////////////\n                                                                                  //\nBlazeLayout = {};                                                                 // 1\n////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////\n//                                                                                //\n// packages/kadira_blaze-layout/lib/client/layout.js                              //\n//                                                                                //\n////////////////////////////////////////////////////////////////////////////////////\n                                                                                  //\nvar currentLayoutName = null;                                                     // 1\nvar currentLayout = null;                                                         // 2\nvar currentRegions = new ReactiveDict();                                          // 3\nvar currentData;                                                                  // 4\nvar _isReady = false;                                                             // 5\n                                                                                  // 6\nBlazeLayout.setRoot = function(root) {                                            // 7\n  BlazeLayout._root = root;                                                       // 8\n};                                                                                // 9\n                                                                                  // 10\nBlazeLayout.render = function render(layout, regions) {                           // 11\n  regions = regions || {};                                                        // 12\n  Meteor.startup(function() {                                                     // 13\n    // To make sure dom is loaded before we do rendering layout.                  // 14\n    // Related to issue #25                                                       // 15\n    if(!_isReady) {                                                               // 16\n      Meteor.defer(function() {                                                   // 17\n        _isReady = true;                                                          // 18\n        BlazeLayout._render(layout, regions)                                      // 19\n      });                                                                         // 20\n    } else {                                                                      // 21\n      BlazeLayout._render(layout, regions);                                       // 22\n    }                                                                             // 23\n  });                                                                             // 24\n};                                                                                // 25\n                                                                                  // 26\nBlazeLayout.reset = function reset() {                                            // 27\n  var layout = currentLayout;                                                     // 28\n  if(layout) {                                                                    // 29\n    if(layout._domrange) {                                                        // 30\n      // if it's rendered let's remove it right away                              // 31\n      Blaze.remove(layout);                                                       // 32\n    } else {                                                                      // 33\n      // if not let's remove it when it rendered                                  // 34\n      layout.onViewReady(function() {                                             // 35\n        Blaze.remove(layout);                                                     // 36\n      });                                                                         // 37\n    }                                                                             // 38\n                                                                                  // 39\n    currentLayout = null;                                                         // 40\n    currentLayoutName = null;                                                     // 41\n    currentRegions = new ReactiveDict();                                          // 42\n  }                                                                               // 43\n};                                                                                // 44\n                                                                                  // 45\nBlazeLayout._regionsToData = function _regionsToData(regions, data) {             // 46\n  data = data || {};                                                              // 47\n  _.each(regions, function(value, key) {                                          // 48\n    currentRegions.set(key, value);                                               // 49\n    data[key] = BlazeLayout._buildRegionGetter(key);                              // 50\n  });                                                                             // 51\n                                                                                  // 52\n  return data;                                                                    // 53\n};                                                                                // 54\n                                                                                  // 55\nBlazeLayout._updateRegions = function _updateRegions(regions) {                   // 56\n  var needsRerender = false;                                                      // 57\n  // unset removed regions from the exiting data                                  // 58\n  _.each(currentData, function(value, key) {                                      // 59\n    if(regions[key] === undefined) {                                              // 60\n      currentRegions.set(key, undefined);                                         // 61\n      delete currentData[key];                                                    // 62\n    }                                                                             // 63\n  });                                                                             // 64\n                                                                                  // 65\n  _.each(regions, function(value, key) {                                          // 66\n    // if this key does not yet exist then blaze                                  // 67\n    // has no idea about this key and it won't get the value of this key          // 68\n    // so, we need to force a re-render                                           // 69\n    if(currentData && currentData[key] === undefined) {                           // 70\n      needsRerender = true;                                                       // 71\n      // and, add the data function for this new key                              // 72\n      currentData[key] = BlazeLayout._buildRegionGetter(key);                     // 73\n    }                                                                             // 74\n    currentRegions.set(key, value);                                               // 75\n  });                                                                             // 76\n                                                                                  // 77\n  // force re-render if we need to                                                // 78\n  if(currentLayout && needsRerender) {                                            // 79\n    currentLayout.dataVar.dep.changed();                                          // 80\n  }                                                                               // 81\n};                                                                                // 82\n                                                                                  // 83\nBlazeLayout._getRootDomNode = function _getRootDomNode() {                        // 84\n  var root = BlazeLayout._root                                                    // 85\n  if(!root) {                                                                     // 86\n    root = Blaze._DOMBackend.parseHTML('<div id=\"__blaze-root\"></div>')[0];       // 87\n    document.body.appendChild(root);                                              // 88\n    BlazeLayout.setRoot(root);                                                    // 89\n  } else if (typeof root === 'string') {                                          // 90\n    root = Blaze._DOMBackend.findBySelector(root, document)[0];                   // 91\n  } else if (root.jquery) {                                                       // 92\n    root = root[0];                                                               // 93\n  }                                                                               // 94\n                                                                                  // 95\n  if(!root) {                                                                     // 96\n    throw new Error(\"Root element does not exist\");                               // 97\n  }                                                                               // 98\n                                                                                  // 99\n  return root;                                                                    // 100\n};                                                                                // 101\n                                                                                  // 102\nBlazeLayout._buildRegionGetter = function _buildRegionGetter(key) {               // 103\n  return function() {                                                             // 104\n    return currentRegions.get(key);                                               // 105\n  };                                                                              // 106\n};                                                                                // 107\n                                                                                  // 108\nBlazeLayout._getTemplate = function (layout, rootDomNode) {                       // 109\n  if (Blaze._getTemplate) {                                                       // 110\n    // if Meteor 1.2, see https://github.com/meteor/meteor/pull/4036              // 111\n    // using Blaze._getTemplate instead of directly accessing Template allows     // 112\n    // packages like Blaze Components to hook into the process                    // 113\n    return Blaze._getTemplate(layout, function () {                               // 114\n      var view = Blaze.getView(rootDomNode);                                      // 115\n      // find the closest view with a template instance                           // 116\n      while (view && !view._templateInstance) {                                   // 117\n        view = view.originalParentView || view.parentView;                        // 118\n      }                                                                           // 119\n      // return found template instance, or null                                  // 120\n      return (view && view._templateInstance) || null;                            // 121\n    });                                                                           // 122\n  }                                                                               // 123\n  else {                                                                          // 124\n    return Template[layout];                                                      // 125\n  }                                                                               // 126\n};                                                                                // 127\n                                                                                  // 128\nBlazeLayout._render = function _render(layout, regions) {                         // 129\n  var rootDomNode = BlazeLayout._getRootDomNode();                                // 130\n  if(currentLayoutName != layout) {                                               // 131\n    // remove old view                                                            // 132\n    BlazeLayout.reset();                                                          // 133\n    currentData = BlazeLayout._regionsToData(regions);                            // 134\n                                                                                  // 135\n    currentLayout = Blaze._TemplateWith(currentData, function() {                 // 136\n      var template = BlazeLayout._getTemplate(layout, rootDomNode);               // 137\n                                                                                  // 138\n      // 'layout' should be null (to render nothing) or an existing template name\n      if (layout !== null && !template)                                           // 140\n        console.log('BlazeLayout warning: unknown template \"' + layout + '\"');    // 141\n                                                                                  // 142\n      return Spacebars.include(template);                                         // 143\n    });                                                                           // 144\n                                                                                  // 145\n    Blaze.render(currentLayout, rootDomNode, null, Blaze.getView(rootDomNode));   // 146\n    currentLayoutName = layout;                                                   // 147\n  } else {                                                                        // 148\n    BlazeLayout._updateRegions(regions);                                          // 149\n  }                                                                               // 150\n};                                                                                // 151\n                                                                                  // 152\n////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['kadira:blaze-layout'] = {}, {\n  BlazeLayout: BlazeLayout\n});\n\n})();\n","servePath":"/packages/kadira_blaze-layout.js","sourceMap":{"version":3,"sources":["/packages/kadira_blaze-layout/lib/client/namespace.js","/packages/kadira_blaze-layout/lib/client/layout.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,swF","file":"/packages/kadira_blaze-layout.js","sourcesContent":["BlazeLayout = {};","var currentLayoutName = null;\nvar currentLayout = null;\nvar currentRegions = new ReactiveDict();\nvar currentData;\nvar _isReady = false;\n\nBlazeLayout.setRoot = function(root) {\n  BlazeLayout._root = root;\n};\n\nBlazeLayout.render = function render(layout, regions) {\n  regions = regions || {};\n  Meteor.startup(function() {\n    // To make sure dom is loaded before we do rendering layout.\n    // Related to issue #25\n    if(!_isReady) {\n      Meteor.defer(function() {\n        _isReady = true;\n        BlazeLayout._render(layout, regions)\n      });\n    } else {\n      BlazeLayout._render(layout, regions);\n    }\n  });\n};\n\nBlazeLayout.reset = function reset() {\n  var layout = currentLayout;\n  if(layout) {\n    if(layout._domrange) {\n      // if it's rendered let's remove it right away\n      Blaze.remove(layout);\n    } else {\n      // if not let's remove it when it rendered\n      layout.onViewReady(function() {\n        Blaze.remove(layout);\n      });\n    }\n\n    currentLayout = null;\n    currentLayoutName = null;\n    currentRegions = new ReactiveDict();\n  }\n};\n\nBlazeLayout._regionsToData = function _regionsToData(regions, data) {\n  data = data || {};\n  _.each(regions, function(value, key) {\n    currentRegions.set(key, value);\n    data[key] = BlazeLayout._buildRegionGetter(key);\n  });\n\n  return data;\n};\n\nBlazeLayout._updateRegions = function _updateRegions(regions) {\n  var needsRerender = false;\n  // unset removed regions from the exiting data\n  _.each(currentData, function(value, key) {\n    if(regions[key] === undefined) {\n      currentRegions.set(key, undefined);\n      delete currentData[key];\n    }\n  });\n\n  _.each(regions, function(value, key) {\n    // if this key does not yet exist then blaze\n    // has no idea about this key and it won't get the value of this key\n    // so, we need to force a re-render\n    if(currentData && currentData[key] === undefined) {\n      needsRerender = true;\n      // and, add the data function for this new key\n      currentData[key] = BlazeLayout._buildRegionGetter(key);\n    }\n    currentRegions.set(key, value);\n  });\n\n  // force re-render if we need to\n  if(currentLayout && needsRerender) {\n    currentLayout.dataVar.dep.changed();\n  }\n};\n\nBlazeLayout._getRootDomNode = function _getRootDomNode() {\n  var root = BlazeLayout._root\n  if(!root) {\n    root = Blaze._DOMBackend.parseHTML('<div id=\"__blaze-root\"></div>')[0];\n    document.body.appendChild(root);\n    BlazeLayout.setRoot(root);\n  } else if (typeof root === 'string') {\n    root = Blaze._DOMBackend.findBySelector(root, document)[0];\n  } else if (root.jquery) {\n    root = root[0];\n  }\n\n  if(!root) {\n    throw new Error(\"Root element does not exist\");\n  }\n\n  return root;\n};\n\nBlazeLayout._buildRegionGetter = function _buildRegionGetter(key) {\n  return function() {\n    return currentRegions.get(key);\n  };\n};\n\nBlazeLayout._getTemplate = function (layout, rootDomNode) {\n  if (Blaze._getTemplate) {\n    // if Meteor 1.2, see https://github.com/meteor/meteor/pull/4036\n    // using Blaze._getTemplate instead of directly accessing Template allows\n    // packages like Blaze Components to hook into the process\n    return Blaze._getTemplate(layout, function () {\n      var view = Blaze.getView(rootDomNode);\n      // find the closest view with a template instance\n      while (view && !view._templateInstance) {\n        view = view.originalParentView || view.parentView;\n      }\n      // return found template instance, or null\n      return (view && view._templateInstance) || null;\n    });\n  }\n  else {\n    return Template[layout];\n  }\n};\n\nBlazeLayout._render = function _render(layout, regions) {\n  var rootDomNode = BlazeLayout._getRootDomNode();\n  if(currentLayoutName != layout) {\n    // remove old view\n    BlazeLayout.reset();\n    currentData = BlazeLayout._regionsToData(regions);\n\n    currentLayout = Blaze._TemplateWith(currentData, function() {\n      var template = BlazeLayout._getTemplate(layout, rootDomNode);\n\n      // 'layout' should be null (to render nothing) or an existing template name\n      if (layout !== null && !template)\n        console.log('BlazeLayout warning: unknown template \"' + layout + '\"');\n\n      return Spacebars.include(template);\n    });\n\n    Blaze.render(currentLayout, rootDomNode, null, Blaze.getView(rootDomNode));\n    currentLayoutName = layout;\n  } else {\n    BlazeLayout._updateRegions(regions);\n  }\n};\n"]}}]