{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/startup/client/routes.js","filenameRelative":"/imports/startup/client/routes.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/startup/client/routes.js.map","sourceFileName":"/imports/startup/client/routes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"routes"},"ignored":false,"code":"Router.configure({\n  //main layout\n  layoutTemplate: 'auth_layout',\n  //loader layout\n  loadingTemplate: 'loader',\n  //error layout\n  notFoundTemplate: '404',\n  //on before any routing action\n  //check if user logged in and limiting access to routes\n  onBeforeAction: function () {\n    function onBeforeAction(pause) {}\n\n    return onBeforeAction;\n  }()\n\n});\n\nRouter.route('/', {\n  //fastRender: true,\n  action: function () {\n    function action() {\n      if (this.ready()) {\n        this.render('headerBanner', { to: 'banner' });\n        this.render('home', {\n          data: function () {\n            function data() {\n              /*Session.set('user', UserDetails.findOne({userid: Meteor.userId()}));*/\n              Session.set(\"homePosts\", {\n                related: Posts.find({}, { sort: { \"data.solved\": -1, \"data.views\": -1, \"data.timestamp\": -1 }, limit: 8 }).fetch(),\n                trending: Posts.find({}, { sort: { \"data.timestamp\": -1, \"data.views\": -1 }, limit: 8 }).fetch(),\n                popular: Posts.find({}, { sort: { \"data.views\": -1, \"data.timestamp\": -1 }, limit: 8 }).fetch()\n              });\n            }\n\n            return data;\n          }()\n        });\n      } else {\n        this.render('loader');\n      }\n    }\n\n    return action;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/imports/startup/client/routes.js"],"names":[],"mappings":"AAAA,OAAO,SAAP,CAAiB;;AAEf,kBAAgB,aAFD;;AAIf,mBAAkB,QAJH;;AAMf,oBAAkB,KANH;;;AASf;AAAgB,4BAAS,KAAT,EAAgB,CAC/B;;AADD;AAAA;;AATe,CAAjB;;AAcA,OAAO,KAAP,CAAa,GAAb,EAAkB;;AAEhB;AAAO,sBAAU;AACf,UAAG,KAAK,KAAL,EAAH,EAAgB;AACd,aAAK,MAAL,CAAY,cAAZ,EAA4B,EAAC,IAAI,QAAL,EAA5B;AACA,aAAK,MAAL,CAAY,MAAZ,EAAmB;AACjB;AAAM,4BAAU;;AAEd,sBAAQ,GAAR,CAAY,WAAZ,EAAyB;AACrB,yBAAS,MAAM,IAAN,CAAW,EAAX,EAAe,EAAE,MAAK,EAAC,eAAe,CAAC,CAAjB,EAAmB,cAAc,CAAC,CAAlC,EAAqC,kBAAkB,CAAC,CAAxD,EAAP,EAAmE,OAAM,CAAzE,EAAf,EAA4F,KAA5F,EADY;AAErB,0BAAU,MAAM,IAAN,CAAW,EAAX,EAAe,EAAE,MAAK,EAAC,kBAAkB,CAAC,CAApB,EAAuB,cAAc,CAAC,CAAtC,EAAP,EAAiD,OAAM,CAAvD,EAAf,EAA0E,KAA1E,EAFW;AAGrB,yBAAS,MAAM,IAAN,CAAW,EAAX,EAAe,EAAE,MAAK,EAAC,cAAc,CAAC,CAAhB,EAAmB,kBAAkB,CAAC,CAAtC,EAAP,EAAiD,OAAM,CAAvD,EAAf,EAA0E,KAA1E;AAHY,eAAzB;AAKD;;AAPD;AAAA;AADiB,SAAnB;AAUD,OAZD,MAYK;AACH,aAAK,MAAL,CAAY,QAAZ;AACD;AACF;;AAhBD;AAAA;AAFgB,CAAlB","file":"/imports/startup/client/routes.js.map","sourcesContent":["Router.configure({\r\n  //main layout\r\n  layoutTemplate: 'auth_layout',\r\n  //loader layout\r\n  loadingTemplate : 'loader',\r\n  //error layout\r\n  notFoundTemplate: '404',\r\n  //on before any routing action\r\n  //check if user logged in and limiting access to routes\r\n  onBeforeAction: function(pause) {\r\n  },\r\n\r\n});\r\n\r\nRouter.route('/', {\r\n  //fastRender: true,\r\n  action:function(){\r\n    if(this.ready()){\r\n      this.render('headerBanner', {to: 'banner'});\r\n      this.render('home',{\r\n        data: function(){\r\n          /*Session.set('user', UserDetails.findOne({userid: Meteor.userId()}));*/\r\n          Session.set(\"homePosts\", {\r\n              related: Posts.find({}, { sort:{\"data.solved\": -1,\"data.views\": -1, \"data.timestamp\": -1}, limit:8}).fetch(),\r\n              trending: Posts.find({}, { sort:{\"data.timestamp\": -1, \"data.views\": -1}, limit:8}).fetch(),\r\n              popular: Posts.find({}, { sort:{\"data.views\": -1, \"data.timestamp\": -1}, limit:8}).fetch(),\r\n          });\r\n        }\r\n      });\r\n    }else{\r\n      this.render('loader');\r\n    }\r\n  }\r\n});"]},"hash":"62beabbf7999db3d82839792516e3ef5a7defccd"}
